services:
  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - "8080:8080"
    container_name: jenkins
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    command: |
      sh -c '
        apt-get update && \
        apt-get install -y docker.io && \
        usermod -aG docker jenkins && \
        service docker start && \
        chmod 666 /var/run/docker.sock && \
        /usr/local/bin/jenkins.sh
      '
    networks:
      - tkxel
    restart: always

  sonarqube:
    container_name: sonarqube
    image: sonarqube:9.9-community
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - /home/ubuntu/sonar-config:/opt/sonarqube/conf
    ports:
      - "9000:9000"
    networks:
      - tkxel
    restart: always

  db:
    container_name: postgress-db
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data    
    networks:
      - tkxel
    restart: always

networks:
  tkxel:
    name: tkxel-network
    driver: bridge

volumes:
  jenkins_home:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
